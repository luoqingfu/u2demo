<ns0:test-suite xmlns:ns0="urn:model.allure.qatools.yandex.ru" start="1545920678886" stop="1545920679143">
  <name>testcase</name>
  <labels/>
  <test-cases>
    <test-case start="1545920678886" status="failed" stop="1545920679132">
      <description>
        我是一个用例描述，这个用例是用来获取Android信息的
        </description>
      <name>test_demo.TestInfo.test_info</name>
      <failure>
        <message>OSError: [Errno subprocess] /Users/qfl/Library/Android/sdk/platform-tools/adb -s emulator-5554 forward tcp:65375 tcp:7912: "error: device 'emulator-5554' not found\n"</message>
        <stack-trace>self = &lt;uiautomator2.adbutils.Adb object at 0x10d079400&gt;
args = ('forward', 'tcp:65375', 'tcp:7912'), kwargs = {}
adb_path = '/Users/qfl/Library/Android/sdk/platform-tools/adb'
cmds = ['/Users/qfl/Library/Android/sdk/platform-tools/adb', '-s', 'emulator-5554', 'forward', 'tcp:65375', 'tcp:7912']
cmdline = '/Users/qfl/Library/Android/sdk/platform-tools/adb -s emulator-5554 forward tcp:65375 tcp:7912'

    def execute(self, *args, **kwargs):
        """
            Example:
                output = execute("ls", "-l")
    
            Raises:
                EnvironmentError
            """
        adb_path = self.adb_path()
        assert adb_path is not None
        cmds = [adb_path, '-s', self._serial] if self._serial else [adb_path]
        cmds.extend(args)
        cmdline = subprocess.list2cmdline(map(str, cmds))
        try:
            return subprocess.check_output(
&gt;               cmdline, stderr=subprocess.STDOUT, shell=True).decode('utf-8')

/Users/qfl/.local/share/virtualenvs/venv/u2demo/lib/python3.6/site-packages/uiautomator2/adbutils.py:55: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

timeout = None
popenargs = ('/Users/qfl/Library/Android/sdk/platform-tools/adb -s emulator-5554 forward tcp:65375 tcp:7912',)
kwargs = {'shell': True, 'stderr': -2}

    def check_output(*popenargs, timeout=None, **kwargs):
        r"""Run command with arguments and return its output.
    
        If the exit code was non-zero it raises a CalledProcessError.  The
        CalledProcessError object will have the return code in the returncode
        attribute and output in the output attribute.
    
        The arguments are the same as for the Popen constructor.  Example:
    
        &gt;&gt;&gt; check_output(["ls", "-l", "/dev/null"])
        b'crw-rw-rw- 1 root root 1, 3 Oct 18  2007 /dev/null\n'
    
        The stdout argument is not allowed as it is used internally.
        To capture standard error in the result, use stderr=STDOUT.
    
        &gt;&gt;&gt; check_output(["/bin/sh", "-c",
        ...               "ls -l non_existent_file ; exit 0"],
        ...              stderr=STDOUT)
        b'ls: non_existent_file: No such file or directory\n'
    
        There is an additional optional argument, "input", allowing you to
        pass a string to the subprocess's stdin.  If you use this argument
        you may not also use the Popen constructor's "stdin" argument, as
        it too will be used internally.  Example:
    
        &gt;&gt;&gt; check_output(["sed", "-e", "s/foo/bar/"],
        ...              input=b"when in the course of fooman events\n")
        b'when in the course of barman events\n'
    
        If universal_newlines=True is passed, the "input" argument must be a
        string and the return value will be a string rather than bytes.
        """
        if 'stdout' in kwargs:
            raise ValueError('stdout argument not allowed, it will be overridden.')
    
        if 'input' in kwargs and kwargs['input'] is None:
            # Explicitly passing input=None was previously equivalent to passing an
            # empty string. That is maintained here for backwards compatibility.
            kwargs['input'] = '' if kwargs.get('universal_newlines', False) else b''
    
        return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,
&gt;                  **kwargs).stdout

/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/subprocess.py:336: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

input = None, timeout = None, check = True
popenargs = ('/Users/qfl/Library/Android/sdk/platform-tools/adb -s emulator-5554 forward tcp:65375 tcp:7912',)
kwargs = {'shell': True, 'stderr': -2, 'stdout': -1}
process = &lt;subprocess.Popen object at 0x10cdc1e80&gt;
stdout = b"error: device 'emulator-5554' not found\n", stderr = None
retcode = 1

    def run(*popenargs, input=None, timeout=None, check=False, **kwargs):
        """Run command with arguments and return a CompletedProcess instance.
    
        The returned instance will have attributes args, returncode, stdout and
        stderr. By default, stdout and stderr are not captured, and those attributes
        will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them.
    
        If check is True and the exit code was non-zero, it raises a
        CalledProcessError. The CalledProcessError object will have the return code
        in the returncode attribute, and output &amp; stderr attributes if those streams
        were captured.
    
        If timeout is given, and the process takes too long, a TimeoutExpired
        exception will be raised.
    
        There is an optional argument "input", allowing you to
        pass a string to the subprocess's stdin.  If you use this argument
        you may not also use the Popen constructor's "stdin" argument, as
        it will be used internally.
    
        The other arguments are the same as for the Popen constructor.
    
        If universal_newlines=True is passed, the "input" argument must be a
        string and stdout/stderr in the returned object will be strings rather than
        bytes.
        """
        if input is not None:
            if 'stdin' in kwargs:
                raise ValueError('stdin and input arguments may not both be used.')
            kwargs['stdin'] = PIPE
    
        with Popen(*popenargs, **kwargs) as process:
            try:
                stdout, stderr = process.communicate(input, timeout=timeout)
            except TimeoutExpired:
                process.kill()
                stdout, stderr = process.communicate()
                raise TimeoutExpired(process.args, timeout, output=stdout,
                                     stderr=stderr)
            except:
                process.kill()
                process.wait()
                raise
            retcode = process.poll()
            if check and retcode:
                raise CalledProcessError(retcode, process.args,
&gt;                                        output=stdout, stderr=stderr)
E               subprocess.CalledProcessError: Command '/Users/qfl/Library/Android/sdk/platform-tools/adb -s emulator-5554 forward tcp:65375 tcp:7912' returned non-zero exit status 1.

/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/subprocess.py:418: CalledProcessError

During handling of the above exception, another exception occurred:

self = &lt;testcase.test_demo.TestInfo object at 0x10d079358&gt;

    @allure.story('测试是否可以获取信息')  # 分支功能
    @allure.severity('blocker')
    @allure.step('')
    @allure.issue('www.baidu.com')
    @allure.testcase('www.baidu.com')
    
    
    
    def test_info(self):
        """
            我是一个用例描述，这个用例是用来获取Android信息的
            """
&gt;       d = u2.connect('emulator-5554')

test_demo.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/Users/qfl/.local/share/virtualenvs/venv/u2demo/lib/python3.6/site-packages/uiautomator2/__init__.py:237: in connect
    return connect_usb(addr)
/Users/qfl/.local/share/virtualenvs/venv/u2demo/lib/python3.6/site-packages/uiautomator2/__init__.py:271: in connect_usb
    lport = adb.forward_port(7912)
/Users/qfl/.local/share/virtualenvs/venv/u2demo/lib/python3.6/site-packages/uiautomator2/adbutils.py:109: in forward_port
    self.forward(free_port, remote_port)
/Users/qfl/.local/share/virtualenvs/venv/u2demo/lib/python3.6/site-packages/uiautomator2/adbutils.py:80: in forward
    return self.execute('forward', local, remote)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;uiautomator2.adbutils.Adb object at 0x10d079400&gt;
args = ('forward', 'tcp:65375', 'tcp:7912'), kwargs = {}
adb_path = '/Users/qfl/Library/Android/sdk/platform-tools/adb'
cmds = ['/Users/qfl/Library/Android/sdk/platform-tools/adb', '-s', 'emulator-5554', 'forward', 'tcp:65375', 'tcp:7912']
cmdline = '/Users/qfl/Library/Android/sdk/platform-tools/adb -s emulator-5554 forward tcp:65375 tcp:7912'

    def execute(self, *args, **kwargs):
        """
            Example:
                output = execute("ls", "-l")
    
            Raises:
                EnvironmentError
            """
        adb_path = self.adb_path()
        assert adb_path is not None
        cmds = [adb_path, '-s', self._serial] if self._serial else [adb_path]
        cmds.extend(args)
        cmdline = subprocess.list2cmdline(map(str, cmds))
        try:
            return subprocess.check_output(
                cmdline, stderr=subprocess.STDOUT, shell=True).decode('utf-8')
        except subprocess.CalledProcessError as e:
            if kwargs.get('raise_error', True):
                raise EnvironmentError("subprocess", cmdline,
                                       e.output.decode(
&gt;                                          'utf-8', errors='ignore'))
E               OSError: [Errno subprocess] /Users/qfl/Library/Android/sdk/platform-tools/adb -s emulator-5554 forward tcp:65375 tcp:7912: "error: device 'emulator-5554' not found\n"

/Users/qfl/.local/share/virtualenvs/venv/u2demo/lib/python3.6/site-packages/uiautomator2/adbutils.py:60: OSError</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="testId" value="www.baidu.com"/>
        <label name="story" value="测试是否可以获取信息"/>
        <label name="feature" value="测试首页"/>
        <label name="severity" value="blocker"/>
        <label name="issue" value="www.baidu.com"/>
        <label name="thread" value="92152-MainThread"/>
        <label name="host" value="QFdeMacBook-Pro.local"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps>
        <step start="1545920678889" status="failed" stop="1545920678940">
          <name></name>
          <attachments/>
          <steps/>
        </step>
      </steps>
    </test-case>
    <test-case start="1545920679134" status="failed" stop="1545920679143">
      <name>test_demo.TestInfo.test_case</name>
      <failure>
        <message>TypeError: str_add() takes 2 positional arguments but 3 were given</message>
        <stack-trace>self = &lt;testcase.test_demo.TestInfo object at 0x10d29d668&gt;

    @allure.story('test_story_01')
    @allure.severity('blocker')
    def test_case(self):
        str1 = 'hello'
        str2 = 'world'
&gt;       assert self.str_add(str1, str2) == 'helloworld'

test_demo.py:53: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

a = (&lt;testcase.test_demo.TestInfo object at 0x10d29d668&gt;, 'hello', 'world')
kw = {}

    @wraps(func)
    def impl(*a, **kw):
        with StepContext(self.allure, self.title.format(*a, **kw)):
&gt;           return func(*a, **kw)
E           TypeError: str_add() takes 2 positional arguments but 3 were given

/Users/qfl/.local/share/virtualenvs/venv/u2demo/lib/python3.6/site-packages/allure/common.py:62: TypeError</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="blocker"/>
        <label name="feature" value="测试首页"/>
        <label name="story" value="test_story_01"/>
        <label name="thread" value="92152-MainThread"/>
        <label name="host" value="QFdeMacBook-Pro.local"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps>
        <step start="1545920679135" status="failed" stop="1545920679135">
          <name>字符串相加：&lt;testcase.test_demo.TestInfo object at 0x10d29d668&gt;，hello</name>
          <title>字符串相加：&lt;testcase.test_demo.TestInfo object at 0x10d29d668&gt;，hello</title>
          <attachments/>
          <steps/>
        </step>
      </steps>
    </test-case>
  </test-cases>
</ns0:test-suite>
